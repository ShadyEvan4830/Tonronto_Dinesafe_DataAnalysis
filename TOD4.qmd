---
title: "TRT Dinesafe Data"
format: revealjs
editor: visual
author: Tianen (Evan) Hao
format: pdf
bibliography: bibliography.bib
---

```{r}
install.packages("readr")

```

```{r}
library(readr)
library(dplyr)
library(ggplot2)

data_path <- "/cloud/project/data/Dinesafe.csv"
dataset <- read_csv(data_path)

cleaned_data <- dataset %>%
  filter(!is.na(`Establishment Name`)) %>%
  mutate(new_column = tolower(`Establishment Name`))

```

```{r}
install.packages("AER")
install.packages("future")
install.packages("gitcreds")
install.packages("knitr")
install.packages("lintr")
install.packages("renv")
install.packages("reprex")
install.packages("styler")
install.packages("tictoc")
install.packages("tidyverse")
install.packages("tinytex")
install.packages("usethis")

```

```{r}
library(AER)
library(future)
library(gitcreds)
library(knitr)
library(lintr)
library(renv)
library(reprex)
library(styler)
library(tictoc)
library(tidyverse)
library(tinytex)
library(usethis)
```

```{r}
library(tidyverse)

# Read the dataset
dataset <- read_csv("/cloud/project/data/Dinesafe.csv")

# Count the number of establishments for each status
status_count <- dataset %>%
  group_by(`Establishment Status`) %>%
  summarize(Count = n())

# Simple plot: Number of establishments by status
ggplot(status_count, aes(x = `Establishment Status`, y = Count)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  labs(title = "Number of Establishments by Status",
       x = "Establishment Status", y = "Count")
```

```{r}
library(tidyverse)
library(lubridate)

dataset <- read_csv("/cloud/project/data/Dinesafe.csv")

dataset <- dataset %>%
  mutate(InspectionYear = year(ymd(`Inspection Date`)))

total_infractions_yearly <- dataset %>%
  filter(!is.na(`Infraction Details`)) %>%
  group_by(InspectionYear) %>%
  summarize(TotalInfractions = n())

g1 <- ggplot(total_infractions_yearly, aes(x = InspectionYear, y = TotalInfractions)) +
  geom_line() +
  theme_minimal() +
  labs(title = "Total Infractions Per Year",
       x = "Year", y = "Total Infractions")

# Load necessary libraries
library(tidyverse)
library(lubridate)

# Read the dataset
dataset <- read_csv("/cloud/project/data/Dinesafe.csv")

# Function to calculate mode (most frequent value)
calculate_mode <- function(x) {
  ux <- unique(na.omit(x))
  ux[which.max(tabulate(match(x, ux)))]
}

# Calculating the mode of 'Min. Inspections Per Year' for each year
yearly_mode_inspections <- dataset %>%
  mutate(Year = year(ymd(`Inspection Date`))) %>%
  group_by(Year) %>%
  summarize(ModeMinInspections = calculate_mode(`Min. Inspections Per Year`))

# Plotting the graph: Most frequent 'Min. Inspections Per Year' per year
g2 <- ggplot(yearly_mode_inspections, aes(x = Year, y = ModeMinInspections)) +
  geom_line() +
  theme_minimal() +
  labs(title = "Most Frequent 'Min. Inspections Per Year' Per Year",
       x = "Year", y = "Most Frequent Min. Inspections")

dataset <- dataset %>%
  filter(!is.na(`Min. Inspections Per Year`), !is.na(`Inspection Date`))

# Assuming the cleaned_dataset or dataset (with imputed values) is used

# Calculating the mode of 'Min. Inspections Per Year' for each year
yearly_mode_inspections <- dataset %>%
  mutate(Year = year(ymd(`Inspection Date`))) %>%
  group_by(Year) %>%
  summarize(ModeMinInspections = calculate_mode(`Min. Inspections Per Year`))

# Plotting the graph
g2 <- ggplot(yearly_mode_inspections, aes(x = Year, y = ModeMinInspections)) +
  geom_line() +
  theme_minimal() +
  labs(title = "Most Frequent 'Min. Inspections Per Year' Per Year",
       x = "Year", y = "Most Frequent Min. Inspections")

g2

g1
g2

```

```{r}
library(tidyverse)
library(stringr)

dataset <- read_csv("/cloud/project/data/Dinesafe.csv")

# Clean the 'Severity' column by removing the prefixes
dataset$Severity <- str_remove(dataset$Severity, "^[A-Z] - ")

# Count the number of different severities
severity_counts <- dataset %>%
  count(Severity, name = "Total_Count")

# Display the counts of different severities
severity_counts

```

```{r}
# Load necessary libraries
library(tidyverse)
library(stringr)

# Read the dataset
dataset <- read_csv("/cloud/project/data/Dinesafe.csv")

# Clean the 'Severity' column by removing prefixes and "NA - Not Applicable"
dataset <- dataset %>%
  mutate(Severity = case_when(
    Severity == "NA - Not Applicable" ~ "Not Applicable",
    TRUE ~ str_remove(Severity, "^[A-Z]+ - ")
  ))

# Count the number of different severities, excluding "Not Applicable"
severity_counts <- dataset %>%
  filter(Severity != "Not Applicable") %>%
  count(Severity, name = "Total_Count")

# Display the counts of different severities
severity_counts

```
